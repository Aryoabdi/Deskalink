<?php

namespace App\Http\Controllers;

use App\Models\User;
use App\Models\Design;
use App\Models\Service;
use App\Models\Order;
use App\Models\Report;
use App\Models\Transaction;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class AdminDashboardController extends Controller
{
    /**
     * Display the admin dashboard with statistics and recent activities.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        // Get counts for various entities
        $statistics = [
            'total_users' => User::count(),
            'total_partners' => User::where('role', 'partner')->count(),
            'total_clients' => User::where('role', 'client')->count(),
            'pending_designs' => Design::where('status', 'pending')->count(),
            'pending_services' => Service::where('status', 'pending')->count(),
            'pending_reports' => Report::where('status', 'pending')->count(),
        ];

        // Get recent users
        $recent_users = User::orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        // Get pending content for moderation
        $pending_designs = Design::with('partner')
            ->where('status', 'pending')
            ->orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        $pending_services = Service::with('partner')
            ->where('status', 'pending')
            ->orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        // Get recent reports
        $recent_reports = Report::with(['reporter', 'reportedUser'])
            ->orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        // Get recent transactions
        $recent_transactions = Transaction::with(['user', 'partner'])
            ->orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        // Get monthly revenue statistics
        $monthly_revenue = Transaction::where('status', 'completed')
            ->whereYear('created_at', now()->year)
            ->whereMonth('created_at', now()->month)
            ->sum('amount');

        $platform_revenue = Transaction::where('status', 'completed')
            ->whereYear('created_at', now()->year)
            ->whereMonth('created_at', now()->month)
            ->sum('platform_fee');

        // Get user registration trend (last 7 days)
        $user_trend = User::select(DB::raw('DATE(created_at) as date'), DB::raw('count(*) as count'))
            ->where('created_at', '>=', now()->subDays(7))
            ->groupBy('date')
            ->orderBy('date')
            ->get()
            ->pluck('count', 'date')
            ->toArray();

        return view('admin.dashboard', compact(
            'statistics',
            'recent_users',
            'pending_designs',
            'pending_services',
            'recent_reports',
            'recent_transactions',
            'monthly_revenue',
            'platform_revenue',
            'user_trend'
        ));
    }

    /**
     * Display system activity logs.
     *
     * @return \Illuminate\View\View
     */
    public function activityLogs()
    {
        $logs = DB::table('moderation_logs')
            ->join('users', 'moderation_logs.moderator_id', '=', 'users.user_id')
            ->select('moderation_logs.*', 'users.username as moderator_name')
            ->orderBy('created_at', 'desc')
            ->paginate(15);

        return view('admin.activity-logs', compact('logs'));
    }

    /**
     * Display system statistics and analytics.
     *
     * @return \Illuminate\View\View
     */
    public function statistics()
    {
        // Get monthly statistics for the current year
        $monthly_stats = Transaction::select(
            DB::raw('MONTH(created_at) as month'),
            DB::raw('SUM(amount) as total_amount'),
            DB::raw('SUM(platform_fee) as total_fee'),
            DB::raw('COUNT(*) as transaction_count')
        )
            ->where('status', 'completed')
            ->whereYear('created_at', now()->year)
            ->groupBy('month')
            ->orderBy('month')
            ->get();

        // Get user growth statistics
        $user_growth = User::select(
            DB::raw('MONTH(created_at) as month'),
            DB::raw('COUNT(*) as user_count')
        )
            ->whereYear('created_at', now()->year)
            ->groupBy('month')
            ->orderBy('month')
            ->get();

        return view('admin.statistics', compact('monthly_stats', 'user_growth'));
    }
}
